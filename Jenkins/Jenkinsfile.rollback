pipeline {
    agent any
    environment {
        DOCKER_REGISTRY = "registry.digitalocean.com/tierone"
        CONTAINER_NAME = "laravel-app"
        IMAGE_NAME = "laravel-prod"
        SSH_USER = "root"
        SSH_HOST = "134.209.37.24"
		REGISTRY_CREDS = credentials('DO-token')
        SSH_KEY = credentials('do-ssh-key')
    }
    stages {
        stage('Login doctl') {
            steps {
                sh 'doctl auth init -t $REGISTRY_CREDS_PSW'
            }
        }
        stage('Obtener tag actual en el droplet') {
			steps {
				script {
					def cmd = """
						ssh -i $SSH_KEY -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST \\
						"docker inspect --format='{{.Config.Image}}' $CONTAINER_NAME | cut -d: -f2"
					"""
					env.currentTag = sh(script: cmd, returnStdout: true).trim()
					echo "Tag actual: ${env.currentTag}"
				}
			}
		}
        stage('Buscar tag previo en el registry') {
			steps {
				script {
					def currentTag = env.currentTag ?: 'latest'
					sh '''
						doctl registry repository list-tags $IMAGE_NAME --output json | jq -r '.tags[].tag' | sort -Vr > tags.txt
					'''
					def tags = readFile('tags.txt').split('\n')
					def prevTag = null
					for (int i = 0; i < tags.size(); i++) {
						if (tags[i] == currentTag && i+1 < tags.size()) {
							prevTag = tags[i+1]
							break
						}
					}
					if (!prevTag) {
						error("No se encontrÃ³ un tag previo para rollback.")
					}
					env.PREV_TAG = prevTag
					echo "Tag previo: ${env.PREV_TAG}"
				}
			}
		}
		// stage('Rollback en el droplet') {
        //     steps {
        //         script {
        //             // Detiene y elimina el contenedor actual, luego ejecuta el anterior
        //             sh '''
        //             ssh -i $SSH_KEY -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST '
        //                 docker stop laravel-starter-prod || true
        //                 docker rm laravel-starter-prod || true
        //                 docker pull $DOCKER_REGISTRY/$IMAGE_NAME:$PREV_TAG
        //                 docker run -d --name laravel-starter-prod -p 80:8080 --restart unless-stopped $DOCKER_REGISTRY/$IMAGE_NAME:$PREV_TAG
        //             '
        //             '''
        //         }
        //     }
        // }
    }
}
